-- Lista das filiais que serão alteradas 
select * from tb_filial where cod_empresa = 3;
--
-- 11 - Palm Beach paver removal techs
-- 10 - Palm Beach Rodrigo
-- 9  - Palm Beach Area 4
-- 2  - Palm Beach Area 5
-- 
-- Palm Beach - 2 
--
SELECT X.*, F.NOM_FILIAL 
  FROM TB_FILIAL AS F JOIN (
							 SELECT F.COD_EMPRESA, F.COD_FILIAL, COUNT(F.COD_USUARIO) 
							   FROM TB_USUARIO_FILIAL AS F 
                                JOIN TB_USUARIOS AS U
								  ON U.COD_EMPRESA = F.COD_EMPRESA
							     AND U.COD_USUARIO = F.COD_USUARIO
							  WHERE F.COD_EMPRESA = 3 
							    AND F.COD_FILIAL IN (3,4,5,6,2,9,10,11) 
								AND U.GRUTECH IN ('Tech')
						   GROUP BY F.COD_FILIAL
						   ) AS X 
    ON X.COD_EMPRESA = F.COD_EMPRESA
   AND F.COD_FILIAL = X.COD_FILIAL
 WHERE F.COD_EMPRESA = 3;
--
--
--
--
-- 21 USUARIO
SELECT * FROM TB_USUARIOS WHERE COD_EMPRESA = 3 AND COD_USUARIO IN (
	SELECT DISTINCT COD_USUARIO FROM tb_usuario_filial WHERE COD_EMPRESA = 3 AND COD_FILIAL IN (11,10,9 )
);
--
-- ^ Alguns scripts acima que forma um pre aquecimento
-- |
--
SELECT * FROM TB_USUARIOS WHERE COD_EMPRESA = 3 AND COD_USUARIO IN (
	SELECT DISTINCT COD_USUARIO FROM tb_usuario_filial WHERE COD_EMPRESA = 3 AND COD_FILIAL IN (11,10,9)
);
--
-- Foi necessarios realizar a atualização da trigger
-- 
DROP TRIGGER IF EXISTS NOVA_FIALIAL_USUARIO;
CREATE TRIGGER NOVA_FIALIAL_USUARIO
AFTER INSERT
ON TB_USUARIO_FILIAL FOR EACH ROW
INSERT INTO TB_JOBS_USUARIO (COD_JOB, COD_EMPRESA, COD_USUARIO, VALOR_PAG, VALOR_REC, QTD_MAX, QTD_MIN, FLG_ATIVO, COD_FILIAL, VALOR_REP)
SELECT 
   JB.COD_JOB, NEW.COD_EMPRESA, NEW.COD_USUARIO, JB.VALOR_PAG, JB.VALOR_REC, JB.QTD_MAX, JB.QTD_MIN, JB.FLG_ATIVO, JB.COD_FILIAL, JB.VALOR_REP
FROM 
   TB_JOB AS JB WHERE JB.COD_EMPRESA = NEW.COD_EMPRESA AND JB.COD_FILIAL = NEW.COD_FILIAL
 ON DUPLICATE KEY UPDATE VALOR_PAG = VALUES(VALOR_PAG), VALOR_REC = VALUES(VALOR_REC), QTD_MAX = VALUES(QTD_MAX), QTD_MIN = VALUES(QTD_MIN), VALOR_REP = VALUES(VALOR_REP);
 --
--
-- 1º Vamos fazer o relacionamento do usuário com as filiais.
--
INSERT INTO tb_usuario_filial (COD_USUARIO, COD_EMPRESA, COD_FILIAL, FLG_PRINCIPAL) 
SELECT TU.COD_USUARIO, 3, 2, 'S' 
  FROM tb_usuario_filial AS TU
  JOIN TB_USUARIOS AS US
    ON US.COD_EMPRESA = TU.COD_EMPRESA
   AND US.COD_USUARIO = TU.COD_USUARIO 
 WHERE TU.COD_EMPRESA = 3
   AND TU.COD_FILIAL IN (11,10,9)
   AND TU.COD_USUARIO NOT IN (
	SELECT DISTINCT COD_USUARIO FROM tb_usuario_filial WHERE COD_EMPRESA = 3 AND COD_FILIAL IN (2)
   );
--
-- 2º Vou remover o auto incremento desta tabela porque o código a ser usado tem que ser o código
-- o código da tabela de tb_jobs
--
SET FOREIGN_KEY_CHECKS = 0;
ALTER TABLE TB_JOBS_USUARIO MODIFY COD_JOB INT(11) NOT NULL;
SET FOREIGN_KEY_CHECKS = 1;
--
-- 3º Vamos fazer os backup das tabelas
-- 
CREATE TABLE tb_imagens_bk_2907 AS SELECT * FROM tb_imagens;
CREATE TABLE tb_jobs_usuario_bk_2907 AS SELECT * FROM tb_jobs_usuario;
CREATE TABLE tb_jobs_ordem_bk_2907 AS SELECT * FROM tb_jobs_ordem;
CREATE TABLE tb_ordem_bk_2907 AS SELECT * FROM tb_ordem;
CREATE TABLE tb_job_bk_2907 AS SELECT * FROM tb_job;
CREATE TABLE tb_usuario_filial_bk_2907 AS SELECT * FROM tb_usuario_filial;
--
-- 4º Vamos fazer os updates dos valores das filiais antigas para as novas
-- 
/* Me ajudou a resolver alguns problema de valores errados
INSERT INTO tb_jobs_usuario(COD_JOB, COD_USUARIO, COD_EMPRESA, VALOR_PAG, VALOR_REC, QTD_MAX, QTD_MIN, FLG_ATIVO, COD_FILIAL, VALOR_REP)
SELECT B.COD_JOB, B.COD_USUARIO, B.COD_EMPRESA, B.VALOR_PAG, B.VALOR_REC, B.QTD_MAX, B.QTD_MIN, B.FLG_ATIVO, B.COD_FILIAL, B.VALOR_REP FROM TB_JOBS_USUARIO AS A
LEFT JOIN tb_jobs_usuario_bk_2907 AS B
ON A.COD_EMPRESA = B.COD_EMPRESA
AND A.COD_JOB = B.COD_JOB
AND A.COD_USUARIO = B.COD_USUARIO
WHERE A.COD_USUARIO IN (39, 52)
AND (A.VALOR_PAG != B.VALOR_PAG OR A.VALOR_REC != B.VALOR_REC OR A.QTD_MAX != B.QTD_MAX OR A.QTD_MIN != B.QTD_MIN)
ON DUPLICATE KEY UPDATE VALOR_PAG = VALUES(VALOR_PAG), VALOR_REC = VALUES(VALOR_REC), QTD_MAX = VALUES(QTD_MAX), QTD_MIN = VALUES(QTD_MIN), VALOR_REP = VALUES(VALOR_REP);
*/
--
SET @FILIAL_DEST = 2;
SET @FILIAL_ORIG = 11; -- 10, 9
SET @COD_USUARIO = 1; -- 13,15,16,17,18,19,22,23,24,26,32,33,38,39,52,125,134,25,27,31
SET @COD_EMPRESA = 3;
UPDATE TB_JOBS_USUARIO AS DEST -- TABELA DE DESTINO
  JOIN (
		SELECT JB.COD_JOB, JB_COP.COD_EMPRESA, JB_COP.VALOR_PAG, JB_COP.VALOR_REC, JB_COP.VALOR_REP, JB_COP.QTD_MAX, JB_COP.QTD_MIN 
          FROM TB_JOB AS JB
		  JOIN ( 
					SELECT JU.COD_EMPRESA, JB.CODE, JB.COD_JOB, JU.VALOR_PAG, JU.VALOR_REC, JU.VALOR_REP, JU.QTD_MAX, JU.QTD_MIN
					  FROM TB_JOBS_USUARIO AS JU 
					  JOIN TB_JOB AS JB 
						ON JB.COD_EMPRESA = JU.COD_EMPRESA 
					   AND JB.COD_JOB = JU.COD_JOB
					 WHERE JU.COD_EMPRESA = @COD_EMPRESA
					   AND JU.COD_FILIAL = @FILIAL_ORIG
                       AND JU.COD_USUARIO = @COD_USUARIO
				) AS JB_COP
			 ON JB_COP.COD_EMPRESA = JB.COD_EMPRESA
            AND JB.CODE = JB_COP.CODE
            AND JB.COD_FILIAL = @FILIAL_DEST
           ) AS ORIG
    ON DEST.COD_EMPRESA = ORIG.COD_EMPRESA 
   AND DEST.COD_JOB = ORIG.COD_JOB
   SET DEST.VALOR_PAG = ORIG.VALOR_PAG,
	   DEST.VALOR_REC = ORIG.VALOR_REC,
       DEST.VALOR_REP = ORIG.VALOR_REP,
       DEST.QTD_MAX = ORIG.QTD_MAX,
       DEST.QTD_MIN = ORIG.QTD_MIN
WHERE DEST.COD_EMPRESA = @COD_EMPRESA AND DEST.COD_FILIAL = @FILIAL_DEST AND DEST.COD_USUARIO IN (@COD_USUARIO);
--
-- 5º Vamos precisar alterar os cod_job na tabela tb_jobs_ordem
--
SET @FILIAL_DEST = 2;
SET @FILIAL_ORIG = 11; -- 10, 9
SET @COD_USUARIO = 1; -- 13,15,16,17,18,19,22,23,24,26,32,33,38,39,52,125,134,25,27,31
SET @COD_EMPRESA = 3;
SET sql_safe_updates = 0;
UPDATE TB_JOBS_ORDEM AS DEST
JOIN (
SELECT JB.COD_EMPRESA, JB.COD_JOB, JB.COD_FILIAL AS F_NOVO, JB_COP.ATUAL, JB_COP.F_ATUAL 
          FROM TB_JOB AS JB
		  JOIN ( 
					SELECT JU.COD_EMPRESA, JB.CODE, JB.COD_JOB, JU.COD_JOB AS ATUAL, JU.COD_FILIAL AS F_ATUAL
					  FROM TB_JOBS_USUARIO AS JU 
					  JOIN TB_JOB AS JB 
						ON JB.COD_EMPRESA = JU.COD_EMPRESA 
					   AND JB.COD_JOB = JU.COD_JOB
					 WHERE JU.COD_EMPRESA = @COD_EMPRESA
					   AND JU.COD_FILIAL = @FILIAL_ORIG
                       AND JU.COD_USUARIO = @COD_USUARIO
				) AS JB_COP
			 ON JB_COP.COD_EMPRESA = JB.COD_EMPRESA
            AND JB.CODE = JB_COP.CODE
            AND JB.COD_FILIAL = @FILIAL_DEST
	 ) AS ORIG
ON ORIG.COD_EMPRESA = DEST.COD_EMPRESA
SET DEST.COD_JOB = ORIG.COD_JOB -- AQUI
WHERE DEST.COD_EMPRESA = @COD_EMPRESA
  AND DEST.COD_FILIAL = @FILIAL_ORIG -- AQUI
  AND DEST.COD_JOB = ORIG.ATUAL; -- AQUI
  --
  SET sql_safe_updates = 1;
--
-- 6° Vamos fazer o processo de alterar o código das filiais das ordems
--
/*SET FOREIGN_KEY_CHECKS = 0;
--
UPDATE TB_IMAGENS SET COD_FILIAL = 2
WHERE COD_EMPRESA = 3 AND COD_FILIAL IN (11,10,9);
--
UPDATE TB_JOBS_ORDEM SET COD_FILIAL = 2
WHERE COD_EMPRESA = 3 AND COD_FILIAL IN (11,10,9);
--
UPDATE TB_ORDEM SET COD_FILIAL = 2
WHERE COD_EMPRESA = 3 AND COD_FILIAL IN (11,10,9);
--
SET FOREIGN_KEY_CHECKS = 1;