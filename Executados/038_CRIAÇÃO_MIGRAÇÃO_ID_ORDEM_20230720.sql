--
-- PRIMEIRO VAMOS FAZER A CRIAÇÃO DAS COLUNAS
--
ALTER TABLE TB_ORDEM ADD COLUMN ID_CORTE INT NOT NULL DEFAULT 1 AFTER COD_TIPO_ORDEM;
ALTER TABLE TB_JOBS_ORDEM ADD COLUMN ID_CORTE INT NOT NULL DEFAULT 1 AFTER COD_TIPO_ORDEM;
ALTER TABLE TB_IMAGENS ADD COLUMN ID_CORTE INT NOT NULL DEFAULT 1 AFTER COD_TIPO_ORDEM;
--
SELECT * FROM TB_ORDEM LIMIT 1;
SELECT * FROM TB_JOBS_ORDEM LIMIT 1;
--
-- CRIAR A NOVA TABELA TEMPORARIA
--
CREATE TABLE TB_ORDEM_NEW (
  `ID_ORDEM` INT(20) NOT NULL AUTO_INCREMENT,
  `JOB_NUM` VARCHAR(30) NOT NULL,
  `COD_EMPRESA` int(11) NOT NULL,
  `COD_USUARIO` int(11) NOT NULL,
  `COD_TIPO_ORDEM` int(11) NOT NULL DEFAULT '1' COMMENT 'Por padrão vamos sumir que as ordem existentes no banco de dados são do tipo de credito',
  `ID_CORTE` int(11) NOT NULL DEFAULT '1',
  `DATA_AGEND` datetime NOT NULL,
  `STATUS` varchar(20) NOT NULL,
  `COMENTARIO` text,
  `DATA_BAIXA` datetime DEFAULT NULL,
  `COD_CIDADE` int(11) NOT NULL,
  `ZIP_CODE` varchar(20) DEFAULT NULL,
  `NUM_CASA` varchar(20) DEFAULT NULL,
  `NOME_RUA` varchar(100) DEFAULT NULL,
  `ORDEM_COM` text,
  `TIME_SLO` varchar(10) DEFAULT NULL,
  `TEL_CLIENTE` varchar(25) DEFAULT NULL,
  `TEL_CLIENTE2` varchar(25) DEFAULT NULL,
  `DATA_ATUALIZACAO` datetime DEFAULT NULL,
  `DATA_CADASTRO` datetime DEFAULT NULL,
  `COD_FILIAL` int(11) NOT NULL DEFAULT '1' COMMENT 'Por padrão vamos sumir que a filial 1 sempre seja a matriz ela tem que existem no cadastro',
  `TEM_IMAGEM` varchar(1) DEFAULT 'N' COMMENT 'Coluna que vai gravar se uma ordem de serviço tem ou não imagem relacionada (Valores vão varia de S e N)',
  `ID_MOTIVO` int(11) DEFAULT NULL COMMENT 'Quando uma ordem de serviço for reagendada o usuario precisa incluir o motivo aqui',
  PRIMARY KEY (ID_ORDEM),
  CONSTRAINT `UK_TB_ORDEM_NEW_01` UNIQUE KEY (`COD_EMPRESA`,`JOB_NUM`,`COD_FILIAL`,`COD_TIPO_ORDEM`, `ID_CORTE`),
  KEY `FK_TB_ORDEM_NEW_01_IDX` (`COD_EMPRESA`),
  KEY `FK_TB_ORDEM_NEW_02_IDX` (`COD_EMPRESA`,`COD_USUARIO`),
  KEY `FK_TB_ORDEM_NEW_03_IDX` (`COD_EMPRESA`,`COD_CIDADE`),
  KEY `FK_TB_ORDEM_NEW_04_IDX` (`COD_EMPRESA`,`STATUS`,`DATA_BAIXA`),
  KEY `FK_TB_ORDEM_NEW_05_IDX` (`COD_EMPRESA`,`COD_FILIAL`),
  KEY `FK_TB_ORDEM_NEW_06_IDX` (`COD_EMPRESA`,`COD_TIPO_ORDEM`),
  KEY `FK_TB_ORDEM_NEW_07_IDX` (`COD_EMPRESA`,`ID_MOTIVO`),
  CONSTRAINT `FK_TB_ORDEM_NEW_01` FOREIGN KEY (`COD_EMPRESA`, `COD_FILIAL`) REFERENCES `tb_filial` (`COD_EMPRESA`, `COD_FILIAL`),
  CONSTRAINT `FK_TB_ORDEM_NEW_02` FOREIGN KEY (`COD_EMPRESA`, `COD_TIPO_ORDEM`) REFERENCES `tb_tipo_ordem` (`COD_EMPRESA`, `COD_TIPO_ORDEM`),
  CONSTRAINT `FK_TB_ORDEM_NEW_03` FOREIGN KEY (`ID_MOTIVO`) REFERENCES `tb_motivo` (`ID_MOTIVO`),
  CONSTRAINT `FK_TB_ORDEM_NEW_04` FOREIGN KEY (`COD_CIDADE`) REFERENCES `tb_cidade` (`COD_CIDADE`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `FK_TB_ORDEM_NEW_05` FOREIGN KEY (`COD_EMPRESA`) REFERENCES `tb_empresa` (`COD_EMPRESA`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `FK_TB_ORDEM_NEW_06` FOREIGN KEY (`COD_USUARIO`, `COD_EMPRESA`) REFERENCES `tb_usuarios` (`COD_USUARIO`, `COD_EMPRESA`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;
--
--
INSERT INTO TB_ORDEM_NEW (JOB_NUM,COD_EMPRESA,COD_USUARIO,COD_TIPO_ORDEM,ID_CORTE,DATA_AGEND,STATUS,COMENTARIO,DATA_BAIXA,COD_CIDADE,ZIP_CODE,NUM_CASA,NOME_RUA,ORDEM_COM,TIME_SLO,TEL_CLIENTE,TEL_CLIENTE2,DATA_ATUALIZACAO,DATA_CADASTRO,COD_FILIAL,TEM_IMAGEM,ID_MOTIVO)
SELECT JOB_NUM,COD_EMPRESA,COD_USUARIO,COD_TIPO_ORDEM,ID_CORTE,DATA_AGEND,STATUS,COMENTARIO,DATA_BAIXA,COD_CIDADE,ZIP_CODE,NUM_CASA,NOME_RUA,ORDEM_COM,TIME_SLO,TEL_CLIENTE,TEL_CLIENTE2,DATA_ATUALIZACAO,DATA_CADASTRO,COD_FILIAL,TEM_IMAGEM,ID_MOTIVO FROM TB_ORDEM;
--
-- SELECT COUNT(0) FROM TB_ORDEM;
-- SELECT COUNT(0) FROM TB_ORDEM_NEW;
--
--
CREATE TABLE TB_JOBS_ORDEM_NEW (
  `ID_JOB_ORDEM` INT(20) NOT NULL AUTO_INCREMENT,
  `ID_ORDEM` INT(20) NOT NULL,
  `COD_EMPRESA` int(11) NOT NULL,
  `JOB_NUM` VARCHAR(30) NOT NULL,
  `COD_JOB` int(11) NOT NULL,
  `COD_TIPO_ORDEM` int(11) NOT NULL DEFAULT '1' COMMENT 'Por padrão vamos sumir que as ordem existentes no banco de dados são do tipo de credito',
  `ID_CORTE` int(11) NOT NULL DEFAULT '1',
  `QTD` decimal(10,2) NOT NULL,
  `VALOR_PAG` decimal(10,2) NOT NULL DEFAULT '0.00',
  `VALOR_REC` decimal(10,2) NOT NULL DEFAULT '0.00',
  `DATA_CADASTRO` datetime DEFAULT NULL,
  `DATA_ATUALIZACAO` datetime DEFAULT NULL,
  `COD_FILIAL` int(11) NOT NULL DEFAULT '1' COMMENT 'Por padrão vamos sumir que a filial 1 sempre seja a matriz ela tem que existem no cadastro',
  PRIMARY KEY (ID_JOB_ORDEM),
  CONSTRAINT `UK_TB_JOBS_ORDEM_NEW_01` UNIQUE KEY (`COD_EMPRESA`,`JOB_NUM`,`COD_FILIAL`,`COD_JOB`,`COD_TIPO_ORDEM`, `ID_CORTE`),
  KEY `FK_TB_JOBS_ORDEM_NEW_01_IDX` (`COD_EMPRESA`,`ID_ORDEM`),
  KEY `FK_TB_JOBS_ORDEM_NEW_02_IDX` (`COD_EMPRESA`),
  KEY `FK_TB_JOBS_ORDEM_NEW_03_IDX` (`COD_EMPRESA`,`COD_JOB`),
  KEY `FK_TB_JOBS_ORDEM_NEW_04_IDX` (`COD_EMPRESA`,`JOB_NUM`),
  KEY `FK_TB_JOBS_ORDEM_NEW_05_IDX` (`COD_EMPRESA`,`COD_FILIAL`),
  KEY `FK_TB_JOBS_ORDEM_NEW_06_IDX` (`COD_EMPRESA`,`JOB_NUM`,`COD_FILIAL`,`COD_TIPO_ORDEM`),
  KEY `FK_TB_JOBS_ORDEM_NEW_07_IDX` (`COD_EMPRESA`,`JOB_NUM`,`COD_FILIAL`,`COD_JOB`,`COD_TIPO_ORDEM`, `ID_CORTE`),
  CONSTRAINT `FK_TB_JOBS_ORDEM_NEW_01` FOREIGN KEY (`COD_EMPRESA`, `COD_FILIAL`) REFERENCES `tb_filial` (`COD_EMPRESA`, `COD_FILIAL`),
  CONSTRAINT `FK_TB_JOBS_ORDEM_NEW_02` FOREIGN KEY (`COD_EMPRESA`) REFERENCES `tb_empresa` (`COD_EMPRESA`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `FK_TB_JOBS_ORDEM_NEW_03` FOREIGN KEY (`ID_ORDEM`) REFERENCES `TB_ORDEM_NEW` (`ID_ORDEM`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;
--
--
INSERT INTO TB_JOBS_ORDEM_NEW(ID_ORDEM,COD_EMPRESA,JOB_NUM,COD_JOB,COD_TIPO_ORDEM,ID_CORTE,QTD,VALOR_PAG,VALOR_REC,DATA_CADASTRO,DATA_ATUALIZACAO,COD_FILIAL)
SELECT OD.ID_ORDEM,JO.COD_EMPRESA,JO.JOB_NUM,JO.COD_JOB,JO.COD_TIPO_ORDEM,JO.ID_CORTE,JO.QTD,VALOR_PAG,JO.VALOR_REC,JO.DATA_CADASTRO,JO.DATA_ATUALIZACAO,JO.COD_FILIAL
  FROM TB_JOBS_ORDEM AS JO
  JOIN TB_ORDEM_NEW AS OD
    ON OD.`COD_EMPRESA` = JO.COD_EMPRESA
   AND OD.`JOB_NUM` = JO.JOB_NUM
   AND OD.`COD_FILIAL` = JO.COD_FILIAL
   AND OD.`COD_TIPO_ORDEM` = JO.COD_TIPO_ORDEM
   AND OD.`ID_CORTE` = JO.ID_CORTE;
--
-- SELECT COUNT(0) FROM TB_JOBS_ORDEM;
-- SELECT COUNT(0) FROM TB_JOBS_ORDEM_NEW;
--
CREATE TABLE TB_IMAGENS_NEW (
  `ID_IMAGEM` int(11) NOT NULL AUTO_INCREMENT,
  `COD_EMPRESA` int(11) NOT NULL,
  `ID_ORDEM` INT(20) NOT NULL,
  `JOB_NUM` VARCHAR(30) NOT NULL,
  `COD_FILIAL` int(11) NOT NULL,
  `COD_TIPO_ORDEM` int(11) NOT NULL,
  `ID_CORTE` int(11) NOT NULL DEFAULT '1',
  `NOME_ARQUIVO` varchar(200) NOT NULL,
  `URL_ARQUIVO` varchar(1000) NOT NULL,
  `ID_STORAGE` varchar(500) NOT NULL,
  `DATA_CADASTRO` datetime DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID_IMAGEM`),
  KEY `FK_TB_IMAGENS_NEW_01_IDX` (`COD_EMPRESA`),
  KEY `FK_TB_IMAGENS_NEW_03_IDX` (`COD_EMPRESA`, `JOB_NUM`, `COD_FILIAL`, `COD_TIPO_ORDEM`, `ID_CORTE`),
  KEY `FK_TB_IMAGENS_NEW_04_IDX` (`COD_EMPRESA`,`ID_ORDEM`),
  CONSTRAINT `FK_TB_IMAGENS_NEW_01` FOREIGN KEY (`COD_EMPRESA`) REFERENCES `tb_empresa` (`COD_EMPRESA`),
  CONSTRAINT `FK_TB_IMAGENS_NEW_02` FOREIGN KEY (`ID_ORDEM`) REFERENCES `TB_ORDEM_NEW` (`ID_ORDEM`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;
--
--
INSERT INTO TB_IMAGENS_NEW(COD_EMPRESA,ID_ORDEM,JOB_NUM,COD_FILIAL,COD_TIPO_ORDEM,ID_CORTE,NOME_ARQUIVO,URL_ARQUIVO,ID_STORAGE,DATA_CADASTRO)
SELECT IM.COD_EMPRESA, OD.ID_ORDEM, IM.JOB_NUM, IM.COD_FILIAL, IM.COD_TIPO_ORDEM, IM.ID_CORTE, IM.NOME_ARQUIVO, IM.URL_ARQUIVO, IM.ID_STORAGE, IM.DATA_CADASTRO
  FROM TB_IMAGENS AS IM
  JOIN TB_ORDEM_NEW AS OD
    ON OD.`COD_EMPRESA` = IM.COD_EMPRESA
   AND OD.`JOB_NUM` = IM.JOB_NUM
   AND OD.`COD_FILIAL` = IM.COD_FILIAL
   AND OD.`COD_TIPO_ORDEM` = IM.COD_TIPO_ORDEM
   AND OD.`ID_CORTE` = IM.ID_CORTE;
--
--
-- SELECT COUNT(0) FROM TB_IMAGENS;
-- SELECT COUNT(0) FROM TB_IMAGENS_NEW;
--
--
-- VAMOS APLICAR A RENOMEAÇÃO DAS TABELAS.
--
RENAME TABLE TB_ORDEM TO TB_ORDEM_BK;
RENAME TABLE TB_JOBS_ORDEM TO TB_JOBS_ORDEM_BK;
RENAME TABLE TB_IMAGENS TO TB_IMAGENS_BK;
--
RENAME TABLE TB_ORDEM_NEW TO TB_ORDEM;
RENAME TABLE TB_JOBS_ORDEM_NEW TO TB_JOBS_ORDEM;
RENAME TABLE TB_IMAGENS_NEW TO TB_IMAGENS;
--
--
--
-- VERSÃO ANTERIOR DO SCRIPT ESTÁ NO ARQUIVO 030
-- SHOW CREATE TRIGGER ADD_IMAGEM;
--
DROP TRIGGER IF EXISTS ADD_IMAGEM;
CREATE DEFINER=`root`@`localhost` TRIGGER ADD_IMAGEM
 AFTER INSERT
 ON `tb_imagens` FOR EACH ROW
 UPDATE TB_ORDEM SET TEM_IMAGEM = 'S' 
  WHERE COD_EMPRESA = NEW.COD_EMPRESA 
    AND ID_ORDEM = NEW.ID_ORDEM;
--
-- SHOW CREATE TRIGGER  DELETE_IMAGEM;
--
DROP TRIGGER IF EXISTS DELETE_IMAGEM;
CREATE DEFINER=`root`@`localhost` TRIGGER DELETE_IMAGEM
 AFTER DELETE
 ON `tb_imagens` FOR EACH ROW
 UPDATE TB_ORDEM SET TEM_IMAGEM = 'N' 
  WHERE COD_EMPRESA = OLD.COD_EMPRESA 
    AND ID_ORDEM = OLD.ID_ORDEM 
    AND (SELECT COUNT(0) 
            FROM TB_IMAGENS 
 		  WHERE COD_EMPRESA = OLD.COD_EMPRESA 
             AND ID_ORDEM = OLD.ID_ORDEM) = 0;
--
--
