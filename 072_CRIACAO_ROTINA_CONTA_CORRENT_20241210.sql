--
ALTER TABLE tb_usuarios ADD COLUMN PERCENTUAL_DESCONTO INT NOT NULL DEFAULT 5 COMMENT 'Qual o percentual maximo de desconto que sera aplicado para o tech';
ALTER TABLE tb_usuarios ADD COLUMN VALOR_DESCONTO_MAXIMO DECIMAL(8,2) NOT NULL DEFAULT 0.00 COMMENT 'Valor maximo que pode ser desconto do usuario';
--
CREATE TABLE TB_VALORES_RETIDOS(
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `COD_EMPRESA` int(11) NOT NULL,
  `COD_USUARIO` int(11) NOT NULL,
  `COD_FILIAL` int(11) DEFAULT NULL,
  `VALOR_TOTAL` decimal(10,2) NOT NULL,
  `DATA_CADASTRO` datetime DEFAULT current_timestamp(),
  `DATA_ATUALIZACAO` datetime,
  PRIMARY KEY (`ID`),
  CONSTRAINT UNIQUE KEY (COD_EMPRESA,COD_USUARIO,COD_FILIAL),
  CONSTRAINT FK_TB_VALORES_RETIDOS_01 FOREIGN KEY (`COD_EMPRESA`) REFERENCES `tb_empresa` (`COD_EMPRESA`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_TB_VALORES_RETIDOS_02 FOREIGN KEY (`COD_USUARIO`, `COD_EMPRESA`) REFERENCES `tb_usuarios` (`COD_USUARIO`, `COD_EMPRESA`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_TB_VALORES_RETIDOS_03 FOREIGN KEY (`COD_EMPRESA`, `COD_FILIAL`) REFERENCES `tb_filial` (`COD_EMPRESA`, `COD_FILIAL`)
);
--
CREATE TABLE TB_VALORES_RETIDOS_LANCAMENTOS(
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `COD_EMPRESA` int(11) NOT NULL,
  `COD_USUARIO` int(11) NOT NULL,
  `COD_FILIAL` int(11) DEFAULT NULL,
  `ID_ORDEM` int(20) NULL COMMENT 'Id da ordem em que o valor foi descontado',
  `TIPO` VARCHAR(100) DEFAULT NULL COMMENT 'Quando Debit e porque o tech fez o trabalho e esta sendo descontado dele, quando Credit a Sephora esta pagando ele por',
  `MOTIVO` VARCHAR(100) DEFAULT NULL,
  `VALOR` decimal(10,2) NOT NULL,
  `DATA_CADASTRO` datetime DEFAULT current_timestamp(),
  PRIMARY KEY (`ID`),
  CONSTRAINT FK_TB_VALORES_LANCAMENTOS_01 FOREIGN KEY (`COD_EMPRESA`) REFERENCES `tb_empresa` (`COD_EMPRESA`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_TB_VALORES_LANCAMENTOS_02 FOREIGN KEY (`COD_USUARIO`, `COD_EMPRESA`) REFERENCES `tb_usuarios` (`COD_USUARIO`, `COD_EMPRESA`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_TB_VALORES_LANCAMENTOS_03 FOREIGN KEY (`COD_EMPRESA`, `COD_FILIAL`) REFERENCES `tb_filial` (`COD_EMPRESA`, `COD_FILIAL`)
);
--
--
DELIMITER //
--
DROP TRIGGER IF EXISTS DEPOIS_INSERIR_LANCAMENTO;
--
CREATE TRIGGER DEPOIS_INSERIR_LANCAMENTO
 AFTER INSERT
 ON TB_VALORES_RETIDOS_LANCAMENTOS FOR EACH ROW
 BEGIN
    DECLARE V_VALOR_DESCONTADO DECIMAL(10,2); -- DESCONTOU DO TECH
	DECLARE V_VALOR_CREDITADO DECIMAL(10,2); -- SEPHORA ESTA DEVOLVENDO O VALOR 
	--
	SELECT SUM(IFNULL(VALOR,0)) INTO V_VALOR_DESCONTADO  
	  FROM TB_VALORES_RETIDOS_LANCAMENTOS 
	 WHERE COD_EMPRESA = NEW.COD_EMPRESA 
	   AND COD_USUARIO = NEW.COD_USUARIO
       AND COD_FILIAL = NEW.COD_FILIAL
       AND TIPO = 'Debit'
       GROUP BY COD_USUARIO;
	--
	SELECT SUM(IFNULL(VALOR,0)) INTO V_VALOR_CREDITADO  
	  FROM TB_VALORES_RETIDOS_LANCAMENTOS 
	 WHERE COD_EMPRESA = NEW.COD_EMPRESA 
	   AND COD_USUARIO = NEW.COD_USUARIO
       AND COD_FILIAL = NEW.COD_FILIAL
       AND TIPO = 'Credit'
       GROUP BY COD_USUARIO;
	--
    INSERT TB_VALORES_RETIDOS(COD_EMPRESA,COD_USUARIO,COD_FILIAL,VALOR_TOTAL,DATA_CADASTRO)
    VALUES (NEW.COD_EMPRESA,NEW.COD_USUARIO,NEW.COD_FILIAL, (IFNULL(V_VALOR_DESCONTADO,0) - IFNULL(V_VALOR_CREDITADO,0)), current_timestamp()) 
        ON DUPLICATE KEY UPDATE
			VALOR_TOTAL = (IFNULL(V_VALOR_DESCONTADO,0) - IFNULL(V_VALOR_CREDITADO,0)),
            DATA_ATUALIZACAO = current_timestamp();
	--
END //
--
DELIMITER ;
--
DELIMITER //
--
DROP TRIGGER IF EXISTS DEPOIS_ATUALIZAR_LANCAMENTO;
--
CREATE TRIGGER DEPOIS_ATUALIZAR_LANCAMENTO
 AFTER UPDATE
 ON TB_VALORES_RETIDOS_LANCAMENTOS FOR EACH ROW
 BEGIN
    DECLARE V_VALOR_DESCONTADO DECIMAL(10,2); -- DESCONTOU DO TECH
	DECLARE V_VALOR_CREDITADO DECIMAL(10,2); -- SEPHORA ESTA DEVOLVENDO O VALOR 
	--
	SELECT SUM(IFNULL(VALOR,0)) INTO V_VALOR_DESCONTADO  
	  FROM TB_VALORES_RETIDOS_LANCAMENTOS 
	 WHERE COD_EMPRESA = NEW.COD_EMPRESA 
	   AND COD_USUARIO = NEW.COD_USUARIO
       AND COD_FILIAL = NEW.COD_FILIAL
       AND TIPO = 'Debit'
       GROUP BY COD_USUARIO;
	--
	SELECT SUM(IFNULL(VALOR,0)) INTO V_VALOR_CREDITADO  
	  FROM TB_VALORES_RETIDOS_LANCAMENTOS 
	 WHERE COD_EMPRESA = NEW.COD_EMPRESA 
	   AND COD_USUARIO = NEW.COD_USUARIO
       AND COD_FILIAL = NEW.COD_FILIAL
       AND TIPO = 'Credit'
       GROUP BY COD_USUARIO;
	--
    INSERT TB_VALORES_RETIDOS(COD_EMPRESA,COD_USUARIO,COD_FILIAL,VALOR_TOTAL,DATA_CADASTRO)
    VALUES (NEW.COD_EMPRESA,NEW.COD_USUARIO,NEW.COD_FILIAL, (IFNULL(V_VALOR_DESCONTADO,0) - IFNULL(V_VALOR_CREDITADO,0)), current_timestamp()) 
        ON DUPLICATE KEY UPDATE
			VALOR_TOTAL = (IFNULL(V_VALOR_DESCONTADO,0) - IFNULL(V_VALOR_CREDITADO,0)),
            DATA_ATUALIZACAO = current_timestamp();
	--
END //
--
DELIMITER ;
--
DELIMITER //
--
DROP TRIGGER IF EXISTS DEPOIS_REMOVER_LANCAMENTO;
--
CREATE TRIGGER DEPOIS_REMOVER_LANCAMENTO
 AFTER DELETE
 ON TB_VALORES_RETIDOS_LANCAMENTOS FOR EACH ROW
 BEGIN
    DECLARE V_VALOR_DESCONTADO DECIMAL(10,2); -- DESCONTOU DO TECH
	DECLARE V_VALOR_CREDITADO DECIMAL(10,2); -- SEPHORA ESTA DEVOLVENDO O VALOR 
	--
	SELECT SUM(IFNULL(VALOR,0)) INTO V_VALOR_DESCONTADO  
	  FROM TB_VALORES_RETIDOS_LANCAMENTOS 
	 WHERE COD_EMPRESA = OLD.COD_EMPRESA 
	   AND COD_USUARIO = OLD.COD_USUARIO
       AND COD_FILIAL = OLD.COD_FILIAL
       AND TIPO = 'Debit'
       GROUP BY COD_USUARIO;
	--
	SELECT SUM(IFNULL(VALOR,0)) INTO V_VALOR_CREDITADO  
	  FROM TB_VALORES_RETIDOS_LANCAMENTOS 
	 WHERE COD_EMPRESA = OLD.COD_EMPRESA 
	   AND COD_USUARIO = OLD.COD_USUARIO
       AND COD_FILIAL = OLD.COD_FILIAL
       AND TIPO = 'Credit'
       GROUP BY COD_USUARIO;
	--
    INSERT TB_VALORES_RETIDOS(COD_EMPRESA,COD_USUARIO,COD_FILIAL,VALOR_TOTAL,DATA_CADASTRO)
    VALUES (OLD.COD_EMPRESA,OLD.COD_USUARIO,OLD.COD_FILIAL, (IFNULL(V_VALOR_DESCONTADO,0) - IFNULL(V_VALOR_CREDITADO,0)), current_timestamp()) 
        ON DUPLICATE KEY UPDATE
			VALOR_TOTAL = (IFNULL(V_VALOR_DESCONTADO,0) - IFNULL(V_VALOR_CREDITADO,0)),
            DATA_ATUALIZACAO = current_timestamp();
	--
END //
--
DELIMITER ;
--
-- CRIAR A PROCEDURE QUE VAI GERAR ESSAS INFORMACOES PRA MIM.
-- select PERCENTUAL_DESCONTO, VALOR_DESCONTO_MAXIMO from tb_usuarios where COD_EMPRESA = 1 and COD_USUARIO = 1;
--
DELIMITER //
--
DROP PROCEDURE IF EXISTS sp_gerar_desconto_automatico_tech;
--
CREATE PROCEDURE sp_gerar_desconto_automatico_tech(IN V_ID_ORDEM INT,IN V_COD_EMPRESA INT, IN V_COD_FILIAL INT, IN V_COD_USUARIO INT)
BEGIN
	-- DADOS DO CLIENTE
    DECLARE V_PERCENTUAL_DESCONTO INT(11);
    DECLARE V_VALOR_DESCONTO_MAXIMO DECIMAL(8,2);
    --
    -- DADOS DOS VALORES RETIDOS DO CLIENTE
	DECLARE V_VALOR_TOTAL DECIMAL(10,2);
    DECLARE V_VALOR_COTA DECIMAL(10,2); 
    DECLARE V_VALOR_COTA_AUX DECIMAL(10,2);
	--
    SELECT PERCENTUAL_DESCONTO, 
           VALOR_DESCONTO_MAXIMO 
	  INTO V_PERCENTUAL_DESCONTO,
	       V_VALOR_DESCONTO_MAXIMO  
	  FROM TB_USUARIOS 
	 WHERE COD_EMPRESA = V_COD_EMPRESA 
	   AND COD_USUARIO = V_COD_USUARIO;
	--
	SELECT IFNULL(VALOR_TOTAL,0) INTO V_VALOR_TOTAL
	  FROM TB_VALORES_RETIDOS 
	 WHERE COD_EMPRESA = V_COD_EMPRESA 
	   AND COD_FILIAL = V_COD_FILIAL
	   AND COD_USUARIO = V_COD_USUARIO;
    --
    -- REGRA 
    -- 1 - SE O VALOR MAXIMO DE DESCONTO ESTA CONFIGURADOS
    -- 2 - SE O PERCENTUAL DE DESCONTO ESTA CONFIGURADO
    -- 3 - SE O VALOR TOTAL QUE FOI DESCONTADO DO TECH E MENOR DO QUE O VALOR CONFIGURADO
    IF V_VALOR_DESCONTO_MAXIMO > 0 AND V_PERCENTUAL_DESCONTO > 0 AND IFNULL(V_VALOR_TOTAL,0) < V_VALOR_DESCONTO_MAXIMO
		THEN 
		--
			SELECT (SUM(JO.QTD * JO.VALOR_PAG)/100) * V_PERCENTUAL_DESCONTO AS VALOR_COTA INTO V_VALOR_COTA
			  FROM TB_JOBS_ORDEM AS JO
			 WHERE JO.COD_EMPRESA = V_COD_EMPRESA
			   AND JO.ID_ORDEM = V_ID_ORDEM
		  GROUP BY JO.ID_ORDEM;
		--
        -- QUANDO O VALOR FOR SER DEBITADO E MAIOR DO QUE O VALOR DISPONIVEL PELA COTA SAMOS CALCULAR PARA CHEGAR NO VALOR DISPOSNIVEL.
        IF(V_VALOR_COTA + IFNULL(V_VALOR_TOTAL,0)) > V_VALOR_DESCONTO_MAXIMO
			THEN 
				SET V_VALOR_COTA = V_VALOR_COTA - ((V_VALOR_COTA + IFNULL(V_VALOR_TOTAL,0)) - V_VALOR_DESCONTO_MAXIMO);
		END IF;
        --
        INSERT INTO TB_VALORES_RETIDOS_LANCAMENTOS(COD_EMPRESA,COD_USUARIO,COD_FILIAL,ID_ORDEM,TIPO,MOTIVO,VALOR)
              VALUES (V_COD_EMPRESA,V_COD_USUARIO,V_COD_FILIAL,V_ID_ORDEM,'Debit','Security Deposit',V_VALOR_COTA);
        -- ATENCAO, AS DEMAIS TABELAS SERAM EXECUTADAS VIA TRIGGER.
        INSERT INTO TB_DIVIDA (`COD_EMPRESA`, `COD_USUARIO`, `TITULO`, `DESCRICAO`, `TIPO_DIVIDA`, `INFO_TIPO_DIVIDA`, `DATA_VENCIMENTO`, `VALOR_DIVIDA`, `VALOR_PARCELA`, `FLG_ATIVO`, `FLG_LIQUIDADO`, `DATA_BAIXA`, `COD_USUARIO_BAIXA`, `TIPO`, `COD_FILIAL`) 
             VALUES (V_COD_EMPRESA, V_COD_USUARIO, 'Security Deposit', 'Security Deposit', 'One Time', '', current_date(), V_VALOR_COTA, V_VALOR_COTA, 'S', 'S', current_timestamp(), null, 'B', V_COD_FILIAL);
        --
    END IF;
    --
END //
--
DELIMITER ;
--
DELIMITER //
DROP TRIGGER IF EXISTS DEPOIS_ATUALIZAR_ORDEM;
--
CREATE TRIGGER DEPOIS_ATUALIZAR_ORDEM
AFTER UPDATE
ON TB_ORDEM FOR EACH ROW
BEGIN
    IF NEW.STATUS = 'Finished' THEN  
        CALL sp_gerar_desconto_automatico_tech(NEW.ID_ORDEM, NEW.COD_EMPRESA, NEW.COD_FILIAL, NEW.COD_USUARIO);
    END IF;
END //
--
DELIMITER ;

